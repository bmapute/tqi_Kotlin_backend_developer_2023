#version: '3.2'
#services:
#  postgres-tqi-order:
#    image: postgres:12-alpine
#    environment:
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      ALLOW_IP_RANGE: 0.0.0.0/0
#    ports:
#      - "5432:5432"
#    restart: always
#    volumes:
#      - pdb12:/var/lib/postgresql/data
#    networks:
#      - postgres-compose-network
#
#  api:
#    container_name: api
#    image: spring-boot-api-tutorial-img
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    depends_on:
#      - postgres-tqi-order
#    ports:
#      - 8080:8080
#    restart: always
#    networks:
#      - postgres-compose-network
#
#volumes:
#  pdb12:
#networks:
#  postgres-compose-network:
#    driver: bridge

version: '3.8'

services:
  postgres:
    image: postgres:13.11-alpine
    environment:
      POSTGRES_USER: bmaputeuser
      POSTGRES_PASSWORD: 12378(#
      POSTGRES_DB: tqi_order1
    ports:
      - "5432:5432"
    volumes:
      - postgres-data12:/var/lib/postgresql/data
    networks:
      - postgres-compose-network

#  app:
#    build: .
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tqi_order1
#      SPRING_DATASOURCE_USERNAME: bmaputeuser
#      SPRING_DATASOURCE_PASSWORD: 12378(#
#    networks:
#      - postgres-compose-network

volumes:
  postgres-data12:
networks:
  postgres-compose-network:
    driver: bridge